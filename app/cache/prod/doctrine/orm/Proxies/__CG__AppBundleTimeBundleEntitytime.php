<?php

namespace Proxies\__CG__\AppBundle\TimeBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class time extends \AppBundle\TimeBundle\Entity\time implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'id', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'userId', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'vname', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'name', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'datum', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'kommen', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'gehen', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'pause', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'total', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'statusId', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'bemerkung');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'id', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'userId', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'vname', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'name', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'datum', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'kommen', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'gehen', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'pause', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'total', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'statusId', '' . "\0" . 'AppBundle\\TimeBundle\\Entity\\time' . "\0" . 'bemerkung');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (time $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId($userId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', array($userId));

        return parent::setUserId($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', array());

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setVname($vname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVname', array($vname));

        return parent::setVname($vname);
    }

    /**
     * {@inheritDoc}
     */
    public function getVname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVname', array());

        return parent::getVname();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatum($datum)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatum', array($datum));

        return parent::setDatum($datum);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatum', array());

        return parent::getDatum();
    }

    /**
     * {@inheritDoc}
     */
    public function setKommen($kommen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKommen', array($kommen));

        return parent::setKommen($kommen);
    }

    /**
     * {@inheritDoc}
     */
    public function getKommen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKommen', array());

        return parent::getKommen();
    }

    /**
     * {@inheritDoc}
     */
    public function setGehen($gehen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGehen', array($gehen));

        return parent::setGehen($gehen);
    }

    /**
     * {@inheritDoc}
     */
    public function getGehen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGehen', array());

        return parent::getGehen();
    }

    /**
     * {@inheritDoc}
     */
    public function setPause($pause)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPause', array($pause));

        return parent::setPause($pause);
    }

    /**
     * {@inheritDoc}
     */
    public function getPause()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPause', array());

        return parent::getPause();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotal($total)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotal', array($total));

        return parent::setTotal($total);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotal', array());

        return parent::getTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusId($statusId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusId', array($statusId));

        return parent::setStatusId($statusId);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusId', array());

        return parent::getStatusId();
    }

    /**
     * {@inheritDoc}
     */
    public function setBemerkung($bemerkung)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBemerkung', array($bemerkung));

        return parent::setBemerkung($bemerkung);
    }

    /**
     * {@inheritDoc}
     */
    public function getBemerkung()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBemerkung', array());

        return parent::getBemerkung();
    }

}
